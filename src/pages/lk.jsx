import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import useUser from '../context/useUser';
import {InstructionValidPatchUrl, TestListGetUrl} from "../helpers/constants";
import useApi from '../hooks/useApi.hook'; // –¥–æ–±–∞–≤–ª–µ–Ω–æ: –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ—é—â–∏–π—Å—è API-–∫–ª–∏–µ–Ω—Ç
import './lk.css';
import PdfModal from "../components/Pdfviewer/PdfModal.jsx";
import Button from "../components/button/Button.jsx";
import { FaRunning } from "react-icons/fa";


const LK = () => {
	const navigate = useNavigate();
	const { user, isLoading, authError, loadUser } = useUser(); // –¥–æ–±–∞–≤–∏–ª loadUser
	const api = useApi(); // –¥–æ–±–∞–≤–ª–µ–Ω api –∫–ª–∏–µ–Ω—Ç

	const [selectedInstruction, setSelectedInstruction] = useState(null);
	const [isModalOpen, setIsModalOpen] = useState(false);
	const [isAcknowledging, setIsAcknowledging] = useState(false); // —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è"

	// üö™ –í—ã—Ö–æ–¥
	const handleLogout = () => {
		localStorage.removeItem("jwt_token");
		navigate("/");
	};

	const openInstruction = (instruction) => {
		setSelectedInstruction(instruction);
		setIsModalOpen(true);
	};

	const closeModal = () => {
		setIsModalOpen(false);
		setSelectedInstruction(null);
	};

	// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ¬´–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è¬ª ‚Äî –¥–µ–ª–∞–µ—Ç PATCH, –ø–æ—Ç–æ–º alert, –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª–∫—É –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç user
	const handleAcknowledge = async () => {
		if (!selectedInstruction) return;
		setIsAcknowledging(true);
		try {
			// –í–ù–ò–ú–ê–ù–ò–ï: –ø—É—Ç—å –≤–∑—è—Ç —Ç–æ—á–Ω–æ –∫–∞–∫ —Ç—ã —É–∫–∞–∑–∞–ª –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–µ: /journals/update_journal/:id
			await api.patch(InstructionValidPatchUrl(selectedInstruction.id));
			alert("–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–æ–π–¥–∏—Ç–µ –≤ —Å–ª—É–∂–±—É –æ—Ö—Ä–∞–Ω—ã —Ç—Ä—É–¥–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –±—É–º–∞–∂–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞!");
			closeModal();
			// –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ loadUser, –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
			if (typeof loadUser === 'function') {
				await loadUser();
			}
		} catch (err) {
			console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è:", err);
			alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
		} finally {
			setIsAcknowledging(false);
		}
	};

	const handleTestClick = async (instruction) => {
		if (!instruction?.id) return;
		try {
			const res = await api.get(TestListGetUrl(instruction.id));
			const tests = res.data.data || []; // –±–µ—Ä–µ–º —Å—Ç—Ä–æ–≥–æ data
			if (tests.length === 1) {
				// –µ—Å–ª–∏ —Ç–µ—Å—Ç –æ–¥–∏–Ω, —Å—Ä–∞–∑—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É Test –∏ –ø–µ—Ä–µ–¥–∞–µ–º id_test —á–µ—Ä–µ–∑ state
				navigate("/test", { state: { testId: tests[0].id, instructionTitle: instruction.title } });
			} else if (tests.length > 1) {
				// –µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ ‚Äî –Ω–∞ —Å–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤, –ø–µ—Ä–µ–¥–∞–µ–º instructionId –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
				navigate("/test_list", { state: { instructionId: instruction.id, title: instruction.title } });
			} else {
				alert("–¢–µ—Å—Ç–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ—Ç.");
			}
		} catch (err) {
			console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤:", err);
			alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
		}
	};


	// üìù –§–∞–º–∏–ª–∏—è + –∏–Ω–∏—Ü–∏–∞–ª—ã
	const formatFullName = (u) => {
		if (!u) return "";
		const initials = [
			u.name ? u.name[0].toUpperCase() + "." : "",
			u.father_name ? u.father_name[0].toUpperCase() + "." : "",
		].join(" ");
		return `${u.last_name} ${initials}`.trim();
	};

	if (isLoading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>;
	if (authError) return <div>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ —Å–Ω–æ–≤–∞.</div>;
	if (!user) return <div>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</div>;

	// üìå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: invalid ‚Üí valid
	const sortedInstructions = [...(user.instructions || [])].sort((a, b) => {
		const aValid = a.journal?.valid ? 1 : 0;
		const bValid = b.journal?.valid ? 1 : 0;
		return aValid - bValid; // 0 (invalid) –ø–æ–π–¥–µ—Ç —Ä–∞–Ω—å—à–µ 1 (valid)
	});

	return (
		<div className="lk-container" style={{ position: "relative" }}>
			<div className="head-lk">
				<FaRunning className="logout-icon" onClick={handleLogout} />
				<h2>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
			</div>

			<div className="user-info">
				<p><strong>–§–ò–û:</strong> {formatFullName(user)}</p>
				<p><strong></strong> {user.profession?.title}</p>
				<p><strong></strong> {user.division?.title}</p>
				<p><strong>–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä:</strong> {user.number}</p>
			</div>

			<h3>–õ–æ–∫–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç—ã:</h3>
			<div className="instructions-grid">
				{sortedInstructions.length > 0 ? (
					sortedInstructions.map((ins) => (
						<div key={ins.id} className="instruction-wrapper" style={{ border: '1px solid #ccc', borderRadius: '8px', padding: '8px' }}>

							{/* –ö–ª–∏–∫–∞—è–±–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
							<div
								className="instruction-card"
								onClick={() => openInstruction(ins)}
								title={ins.title}
								style={{ cursor: 'pointer', padding: '4px 0' }}
							>
								{ins.journal?.valid ? (
									<span className="status valid"> ‚úÖ </span>
								) : (
									<span className="status invalid"> ‚ö†Ô∏è –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è </span>
								)}
								<h3>{ins.title}</h3>
								<p>{ins.number}</p>
								{ins.journal?.last_date_read && (
									<p className="last-read">
										–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–æ—á—Ç–µ–Ω–∏–µ: {new Date(ins.journal.last_date_read).toLocaleDateString()}
									</p>
								)}

							</div>

							{/* –ë–ª–æ–∫ –∫–Ω–æ–ø–æ–∫ */}
							<div className="instruction-actions" style={{ marginTop: '8px', display: 'flex', gap: '8px' }}>
								{ins.is_modules_bind && (
									<Button
										onClick={() => navigate("/education", {
											state: {
												instructionId: ins.id,
												title: ins.title,
												is_tests_bind: ins.is_tests_bind   // <-- –¥–æ–±–∞–≤–ª—è–µ–º —Å—é–¥–∞
											}
										})}
									>
										–û–±—É—á–µ–Ω–∏–µ
									</Button>
								)}


								{ins.is_tests_bind && (
									<Button onClick={() => handleTestClick(ins)}>
										–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
									</Button>
								)}
							</div>

						</div>
					))
				) : (
					<p>–õ–ù–ê –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.</p>
				)}
			</div>

			<PdfModal
				isOpen={isModalOpen}
				onClose={closeModal}
				url={selectedInstruction?.link}
				actionButton={
					!selectedInstruction?.journal?.valid && (   // ‚úÖ –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ invalid
						<Button
							className="actionBtn"
							onClick={handleAcknowledge}
							disabled={isAcknowledging}
						>
							{isAcknowledging ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è"}
						</Button>
					)
				}
			/>

		</div>
	);
};

export default LK;
